% -*- slang -*-

% This is a sample jed.conf that the user may put in /etc or /usr/local/etc
% to setup some defaults for all users.

_Jed_Default_Emulation = "emacs";
_Jed_Default_Color_Scheme = "mine";
Info_Directory = "/usr/info,/usr/share/info";
auto_compression_mode (1);
enable_dfa_syntax_for_mode ("PostScript", "TCL", "LaTeX");
Jed_Home_Directory = path_concat(getenv("HOME"), ".jed");
set_jed_library_path(Jed_Home_Directory + "," + get_jed_library_path());
Jed_Highlight_Cache_Dir = path_concat(Jed_Home_Directory, "dfa");

add_mode_for_extension("latex", "tex");
add_mode_for_extension("latex", "dtx");
add_mode_for_extension("latex", "ltx");
add_mode_for_extension("latex", "sty");
add_mode_for_extension("latex", "cls");

define after_latex_external_load_hook()
{
    % Define your own configuration for building and viewing the output file.
    call_function("latex_external->cust_set",
                  "LuaHBLaTeX", "LuaHBLaTeX",
                  "upbibtex %m", "",
                  "lualatex-dev -interaction=nonstopmode %m", "",
                  "",
                  "",
                  "",
                  "zathura %M.pdf",
                  1);
    call_function("latex_external->cust_set",
                  "LuaLaTeX", "LuaLaTeX",
                  "upbibtex %m", "",
                  "lualatex -interaction=nonstopmode %m", "",
                  "",
                  "",
                  "",
                  "zathura %M.pdf",
                  1);
    call_function("latex_external->cust_set",
                  "uplatex", "uplatex and dvipdfmx",
                  "upbibtex %m", "",
                  "ptex2pdf -ld -u -ot -interaction=nonstopmode %m", "",
                  "",
                  "",
                  "",
                  "zathura %M.pdf",
                  1);
    call_function("latex_external->cust_set",
                  "platex", "platex and dvipdfmx",
                  "pbibtex %m", "",
                  "ptex2pdf -ld -ot -interaction=nonstopmode %m", "",
                  "",
                  "",
                  "",
                  "zathura %M.pdf",
                  1);
};
variable LaTeX_Config = "LuaLaTeX";
variable LaTeX_Typo_Active = 0;
variable LaTeX_Indent_First = 2;
variable LaTeX_Indent_Item = 1;
variable LaTeX_Indent_Continued = 0;
WRAP = 1000;
TAB = 4;
TAB_DEFAULT = 4;
LINENUMBERS = 2;
WANT_EOB = 1;
USE_TABS = 0;

define latex_mode_hook ()
{
  WRAP = 1000; USE_TABS = 0;
}
define lua_mode_hook ()
{
  WRAP = 1000; USE_TABS = 0;
}
define insert_xa ()
{
   insert("\\expandafter");
}

setkey("insert_xa", "\xee\x80\x80");
setkey("bol", "^[[1~");
setkey("eol", "^[[4~");
setkey("bol", "^[OH");
setkey("eol", "^[OF");
setkey("del", "^[[3~");


#ifdef HAS_DFA_SYNTAX
private define setup_dfa_callback(name)
{
    dfa_enable_highlight_cache("text.dfa", name);
    dfa_define_highlight_rule("\xC2.", "normal", name);
    dfa_define_highlight_rule("\xC3.", "normal", name);
    dfa_define_highlight_rule("\xC4.", "normal", name);
    dfa_define_highlight_rule("\xC5.", "normal", name);
    dfa_define_highlight_rule("\xC6.", "normal", name);
    dfa_define_highlight_rule("\xC7.", "normal", name);
    dfa_define_highlight_rule("\xC8.", "normal", name);
    dfa_define_highlight_rule("\xC9.", "normal", name);
    dfa_define_highlight_rule("\xCA.", "normal", name);
    dfa_define_highlight_rule("\xCB.", "normal", name);
    dfa_define_highlight_rule("\xCC.", "normal", name);
    dfa_define_highlight_rule("\xCD.", "normal", name);
    dfa_define_highlight_rule("\xCE.", "normal", name);
    dfa_define_highlight_rule("\xCF.", "normal", name);
    dfa_define_highlight_rule("\xD0.", "normal", name);
    dfa_define_highlight_rule("\xD1.", "normal", name);
    dfa_define_highlight_rule("\xD2.", "normal", name);
    dfa_define_highlight_rule("\xD3.", "normal", name);
    dfa_define_highlight_rule("\xD4.", "normal", name);
    dfa_define_highlight_rule("\xD5.", "normal", name);
    dfa_define_highlight_rule("\xD6.", "normal", name);
    dfa_define_highlight_rule("\xD7.", "normal", name);
    dfa_define_highlight_rule("\xD8.", "normal", name);
    dfa_define_highlight_rule("\xD9.", "normal", name);
    dfa_define_highlight_rule("\xDA.", "normal", name);
    dfa_define_highlight_rule("\xDB.", "normal", name);
    dfa_define_highlight_rule("\xDC.", "normal", name);
    dfa_define_highlight_rule("\xDD.", "normal", name);
    dfa_define_highlight_rule("\xDE.", "normal", name);
    dfa_define_highlight_rule("\xDF.", "normal", name);
    dfa_define_highlight_rule("\xE2..", "normal", name);
    dfa_define_highlight_rule("\xE3\x80\x80", "Qkeyword2", name);
    dfa_define_highlight_rule("\xE3..", "normal", name);
    dfa_define_highlight_rule("\xE4..", "normal", name);
    dfa_define_highlight_rule("\xE5..", "normal", name);
    dfa_define_highlight_rule("\xE6..", "normal", name);
    dfa_define_highlight_rule("\xE7..", "normal", name);
    dfa_define_highlight_rule("\xE8..", "normal", name);
    dfa_define_highlight_rule("\xE9..", "normal", name);
    dfa_define_highlight_rule("\xEA..", "normal", name);
    dfa_define_highlight_rule("\xEB..", "normal", name);
    dfa_define_highlight_rule("\xEC..", "normal", name);
    dfa_define_highlight_rule("\xED..", "normal", name);
    dfa_define_highlight_rule("\xEE..", "normal", name);
    dfa_define_highlight_rule("\xEF..", "normal", name);
    dfa_define_highlight_rule("\xF0...", "normal", name);
    dfa_define_highlight_rule("\xF1...", "normal", name);
    dfa_define_highlight_rule("\xF2...", "normal", name);
    dfa_define_highlight_rule("\xF3...", "normal", name);
    dfa_define_highlight_rule("\xF4...", "normal", name);
    dfa_define_highlight_rule("\xF5...", "normal", name);
    dfa_define_highlight_rule("\xF6...", "normal", name);
    dfa_define_highlight_rule("\xF7...", "normal", name);

    dfa_define_highlight_rule("[ \t]+$", "trailing_whitespace", name);
    dfa_define_highlight_rule(".", "normal", name);
    dfa_build_highlight_table(name);
}
create_syntax_table("Text");
dfa_set_init_callback(&setup_dfa_callback, "Text");
enable_dfa_syntax_for_mode("Text");
define text_mode_hook() { use_syntax_table("Text"); }
#endif

public define insert_simulated_tab ()
{
    insert_spaces (TAB - (what_column () - 1) mod TAB);
}
public define global_mode_hook(hook_name){
    if (hook_name=="latex_mode_hook")
        local_setkey ("indent_line", "\t");
    else
        local_setkey ("insert_simulated_tab", "\t");
}
define keybindings_hook(emulation) {
   unsetkey("^XF");
   setkey ("insert_simulated_tab", "\t");
}

define my_startup_hook()
{
  if (whatbuf=="*scratch*") text_mode;
}

add_to_hook("_jed_startup_hooks", &my_startup_hook);
